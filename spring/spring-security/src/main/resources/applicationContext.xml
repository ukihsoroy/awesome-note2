<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--配置文件引入-->
    <context:property-placeholder location="classpath*:properties/dev.properties" file-encoding="UTF-8"/>

	<!-- 数据源druid -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="3" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />

		<!-- 超过时间限制是否回收 -->
		<property name="removeAbandoned" value="true" />

		<!-- 超时时间；单位为秒。180秒=3分钟 -->
		<property name="removeAbandonedTimeout" value="3" />

		<!-- abanded连接时是否输出错误日志 -->
		<property name="logAbandoned" value="false" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="300" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="180000" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="false" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />

		<property name="connectionProperties" value="config.decrypt=false" />

		<!-- 配置监控统计拦截的filters -->
		<!-- 密码解密用filter -->
		<property name="filters" value="config" />
		<property name="proxyFilters">
			<list>
				<!--  sql监控 -->
				<bean class="com.alibaba.druid.filter.stat.StatFilter">
					<property name="mergeSql" value="true" />
					<!-- 执行时间超过1秒的sql认为慢 -->
					<property name="slowSqlMillis" value="1000"/>
					<!-- 日志输出执行慢的sql -->
					<property name="logSlowSql" value="true"/>
				</bean>
				<!-- sql注入检查 -->
				<bean class="com.alibaba.druid.wall.WallFilter">
					<property name="logViolation" value="true"/>
					<property name="throwException" value="false"/>
				</bean>
			</list>
		</property>

		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://${db.ip}:${db.port}/${db.name}?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false"/>
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />

	</bean>

	<!-- sessionFactory 将spring和mybatis整合 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
        <!-- 加载mappers文件 -->
		<property name="mapperLocations" value="classpath:mappers/*.xml" />
	</bean>
	<!-- dao mapping接口扫描 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="org.ko.security.dao.*" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

    <!-- 事务 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" primary="true">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--引入安全框架配置-->
    <import resource="spring-security.xml"/>

</beans>